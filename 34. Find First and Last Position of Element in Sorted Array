class Solution {
    public int[] searchRange(int[] nums, int target) {
        int start = searchLeftmost(nums, target);
        if(start == nums.length || nums[start] != target){
            return new int[]{-1, -1};
        }
        
        return new int[]{start, searchLeftmost(nums, target + 1) - 1};
    }
    
    private int searchLeftmost(int[] nums, int target){
            int left = 0, right = nums.length;
            while(left < right){
                int mid = left + (right - left) / 2;

                // this cannot be here
                //if(nums[mid] == target) return mid;
                if(target > nums[mid]) left = mid + 1;
                else right = mid;
            }

            return left;
    }
}
