349	Intersection of Two Arrays 
class Solution {
    public int[] intersection(int[] nums1, int[] nums2) {
        HashSet<Integer> set = new HashSet<>();
        HashSet<Integer> result = new HashSet<>();
        
        for(int i = 0; i < nums1.length; i++){
            set.add(nums1[i]);
        }
        
        for(int i = 0; i < nums2.length; i++){
            if(set.contains(nums2[i])) result.add(nums2[i]);
        }
        
        int[] res = new int[result.size()];
        int i = 0;
        for(int num : result){
            res[i] = num;
            i++;
        }
        return res;
    }
}


350	Intersection of Two Arrays II

Method 1:
public int[] intersect(int[] nums1, int[] nums2) {
        List<Integer> list = new ArrayList();
        Arrays.sort(nums1);
        Arrays.sort(nums2);
        int i = 0, j = 0, m = nums1.length, n = nums2.length;
        while (i < m && j < n) {
            if(nums1[i] > nums2[j]) {
                j++;
            }
            else if (nums1[i] < nums2[j]) {
                i++;
            }
            else {
                list.add(nums1[i]);
                i++;
                j++;
            }
        }
        int[] result = new int[list.size()];
        int size = 0;
        for (int num : list) {
            result[size++] = num;
        }
        return result;      
    }
    
Method 2:
class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        ArrayList<Integer> result = new ArrayList<Integer>();
        for(int num : nums1)
        {
            map.put(num, map.getOrDefault(num, 0) + 1);
        }
    
        for(int i = 0; i < nums2.length; i++)
        {
            if(map.containsKey(nums2[i]) && map.get(nums2[i]) > 0)
            {
                result.add(nums2[i]);
                map.put(nums2[i], map.get(nums2[i])-1);
            }
        }
    
       int[] r = new int[result.size()];
       for(int i = 0; i < result.size(); i++)
       {
           r[i] = result.get(i);
       }
    
       return r;
    }
}
