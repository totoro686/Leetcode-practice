/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean isCompleteTree(TreeNode root) {
      if(root == null) return true;
        Queue<TreeNode> q = new LinkedList<>();
        q.add(root);
        boolean isNull = false;

        while(!q.isEmpty()){

          TreeNode node = q.poll();

          if(node.left != null){
            if(isNull == true) return false;
            q.add(node.left);
          } else {
            isNull = true;
          }


          if(node.right != null){
            if(isNull == true) return false;
            q.add(node.right);
          } else {
            isNull = true;
          }
        }
    
    return isNull;
  }
}
