A strobogrammatic number is a number that looks the same when rotated 180 degrees (looked at upside down).

Write a function to determine if a number is strobogrammatic. The number is represented as a string.

 

Example 1:

Input: num = "69"
Output: true
Example 2:

Input: num = "88"
Output: true
Example 3:

Input: num = "962"
Output: false
Example 4:

Input: num = "1"
Output: true


Method:

class Solution {
    public boolean isStrobogrammatic(String num) {
        // 0, 1, 8 are same when upside down
        // 6 -> 9 and 9 -> 6
        
        Map<Character, Character> map = new HashMap<>();
        map.put('0', '0');
        map.put('1', '1');
        map.put('8', '8');
        map.put('6', '9');
        map.put('9', '6');
        
        int i = 0;
        int j = num.length() - 1;
        while (i <= j) {
            if (!map.containsKey(num.charAt(i))) {
                return false;
            }
            
            if (num.charAt(j) != map.get(num.charAt(i))) {
                return false;
            }
            i++;
            j--;
        }
        return true;
    }
}
